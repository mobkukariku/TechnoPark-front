"use client";

import dynamic from "next/dynamic";
import "@toast-ui/editor/dist/toastui-editor.css";
import "@toast-ui/editor/dist/theme/toastui-editor-dark.css";
import { useEffect, useRef } from "react";

import {
    ContextMenu,
    ContextMenuContent,
    ContextMenuItem,
    ContextMenuSeparator,
    ContextMenuTrigger,
} from "@/shared/ui/context-menu";
import type { Editor as EditorType } from "@toast-ui/react-editor";


// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –±–µ–∑ SSR + –∑–∞–≥–ª—É—à–∫–∞ –Ω–∞ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
const Editor = dynamic(() => import("@toast-ui/react-editor").then((mod) => mod.Editor), {
    ssr: false,
    loading: () => <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...</div>,
});

interface NewsContentEditorProps {
    onChange: (content: string) => void;
    content?: string;
}

export default function NewsContentEditor({ onChange, content }: NewsContentEditorProps) {
    const editorRef = useRef<EditorType | null>(null);


    useEffect(() => {
        if (editorRef.current) {
            editorRef.current.getInstance().setHTML(content || "");
        }
    }, [content]);

    const handleChange = () => {
        if (editorRef.current) {
            const html = editorRef.current.getInstance().getHTML();
            onChange(html);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
        const file = event.target.files?.[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = () => {
            const base64 = reader.result as string;
            if (editorRef.current) {
                editorRef.current.getInstance().insertText(`![image](${base64})`);
            }
        };
        reader.readAsDataURL(file);
    };

    return (
        <ContextMenu>
            <ContextMenuTrigger>
                <div className="border p-2 rounded min-h-[200px] h-[500px]">
                    <Editor
                        ref={editorRef}
                        initialValue="–ù–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ..."
                        previewStyle="vertical"
                        height="100%"
                        initialEditType="wysiwyg"
                        useCommandShortcut={true}
                        onChange={handleChange}
                    />
                </div>
            </ContextMenuTrigger>
            <ContextMenuContent className="w-48">
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("bold")}>
                    Bold (–ñ–∏—Ä–Ω—ã–π)
                </ContextMenuItem>
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("italic")}>
                    Italic (–ö—É—Ä—Å–∏–≤)
                </ContextMenuItem>
                <ContextMenuSeparator />
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("heading", { level: 1 })}>
                    –ó–∞–≥–æ–ª–æ–≤–æ–∫ H1
                </ContextMenuItem>
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("heading", { level: 2 })}>
                    –ó–∞–≥–æ–ª–æ–≤–æ–∫ H2
                </ContextMenuItem>
                <ContextMenuSeparator />
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("ul")}>
                    ‚Ä¢ –°–ø–∏—Å–æ–∫
                </ContextMenuItem>
                <ContextMenuItem onClick={() => editorRef.current?.getInstance().exec("ol")}>
                    1. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
                </ContextMenuItem>
                <ContextMenuSeparator />
                {/* –ü–æ–ª–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ */}
                <label className="cursor-pointer block px-2 py-1 text-sm hover:bg-gray-100">
                    üñº –î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    <input type="file" accept="image/*" onChange={handleImageUpload} className="hidden" />
                </label>
            </ContextMenuContent>
        </ContextMenu>
    );
}
